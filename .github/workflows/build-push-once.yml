name: One-time Build & Push

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  packages: read

jobs:
  build-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPO:   ${{ secrets.ECR_REPO }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        shell: bash
        run: |
          set -euo pipefail
          REPO_NAME="$(echo "$ECR_REPO" | awk -F/ '{print $2}')"
          aws ecr describe-repositories --repository-names "$REPO_NAME" >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "$REPO_NAME" >/dev/null

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region "$AWS_REGION" \
            | docker login --username AWS --password-stdin "$(echo "$ECR_REPO" | awk -F/ '{print $1}')"

      - name: Compute image tags
        run: |
          echo "IMAGE_SHA=$ECR_REPO:${GITHUB_SHA}" >> "$GITHUB_ENV"
          echo "IMAGE_LATEST=$ECR_REPO:latest" >> "$GITHUB_ENV"

      - name: Build image
        working-directory: app
        run: |
          docker build -t "$IMAGE_SHA" -t "$IMAGE_LATEST" .

      - name: Push image
        run: |
          docker push "$IMAGE_SHA"
          docker push "$IMAGE_LATEST"

      - name: Show image details
        run: |
          docker inspect "$IMAGE_SHA" --format='{{.RepoTags}} -> {{.Id}}' || true
